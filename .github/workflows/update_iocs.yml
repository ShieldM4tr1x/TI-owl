name: Update IOCs

on:
  schedule:
    - cron: '0 * * * *'  # Run at the top of every hour
  workflow_dispatch:       # Allow manual trigger

jobs:
  update:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for proper git operations

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: python -m pip install -r backend/requirements.txt

      - name: Run IOC Aggregator
        run: |
          echo "Running IOC aggregation..."
          python backend/aggregator.py || { echo "Aggregator failed"; exit 1; }
          echo "IOC aggregation completed"

      - name: Check for changes
        id: verify
        run: |
          git add frontend/iocs.json
          if git diff --cached --quiet; then
            echo "No changes detected."
            echo "has_changes=false" >> "$GITHUB_OUTPUT"
          else
            echo "Changes detected."
            echo "has_changes=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Update docs symlink
        if: steps.verify.outputs.has_changes == 'true'
        run: |
          echo "Updating docs symlink..."
          rm -rf docs  # Safe delete (file or symlink)
          ln -s frontend docs
          git add docs

      - name: Commit and push changes
        if: steps.verify.outputs.has_changes == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Committing changes..."
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git commit -m "Auto-update IOCs [$(date +'%Y-%m-%d %H:%M UTC')]"

          echo "Setting remote with token (secure method)..."
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git
          git push origin HEAD:${{ github.ref_name }}

      - name: No changes to commit
        if: steps.verify.outputs.has_changes == 'false'
        run: echo "No changes detected. Skipping commit."
